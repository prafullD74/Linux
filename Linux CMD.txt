echo
date 
history
!!
echo $PATH
which history
man : man -k which
ls : ls -l
cat 1> output.txt : >> appending 0-StandardInput 1-StandardOutout 2-StandardError
cat 2> error.txt : > will delete previous data (overwrite a file) while >> its add-up more data (will append to)
cat < input.txt
tty
cut < date.txt --delimiter "" --fields 1
date | cut --delimiter="" --fields 1
tee : to save a data snapshot without breaking pipelines
date | tee fulldate.txt | cut --delimiter "" --fields 1
xargs : use it when cmd doesn't accept STDIN. build and execute command lines from standard input
date | xargs echo
Aliases :
date | tee /home/fulldate.txt | cut cut --delimiter="" --fields=1 | tee /home/shortdate.txt | xargs echo hello
alias clr='clear'
ls /etc > file1.txt | ls /run > file2.txt | cat file1.txt file2.txt > unsorted.txt | tac unsorted.txt > reversed.txt
ls /etc > file1.txt | ls /run > file2.txt | cat file1.txt file2.txt | tee  unsorted.txt | sort -r > reversed.txt
11/9/2022
~ : home directory
pwd
ls
cd .. 
file file1.txt
file header reads file type for linux & file.extension is important for software
Wildcards :
ls * , ls D*, ls *.txt, 
ls file?.txt ,  ls file[12345].txt , ls file[0-9][A-Z][a-z].txt
touch file1.txt 
mkdir -p /home/username/team , mkdir "team X"
mkdir {jan,feb,mar}_{2021,2022}
touch file{A,B,C}.txt , touch file{A..C}.txt
rm , rm -r , i - interactive
rmdir
cp , ls -a
mv , mv ~/doc/folder1/ ./newfold
sudo apt install locate
sudo apt install mlocate
locate *.conf
locate -i --limit 3 *.conf
locate -S , locate -e
updatedb
find , find . -maxdepth 1, fidn . type -f/d, find . -name "file.txt"
find / -type f -size +110k | wc -l , find / -type f -size +110k -o -size +5M | wc -l
sudo find / -type f size +10k -size -1M -exec cp {} ~/desktop/team \;
find team/ -type f -name "data.txt" -exec mv {} ~/Desktop \;
cat tac rev 
head -n 20 /etc/file2.txt
tail -n 20 /etc/file2.txt
sort , sort -r , sort -n , sort -k 5n , -M -h
ls -l /etc | head -n 20 | sort -k 5nr
tar -cvf temp.tar file[1-3].txt , tar -xvf temp.tar
gzip bzip , zip fileZ.zip file1.txt file2.txt, unzip fileZ.zip
backups : 
tar -cvzf compress.tar.gz file[1-3].txt for bzip -cvjf .bz2
tar -xvzf compress.tar.gz , tar -xvjf compress.tar.bz2
Assignement :
Part 1
mkdir super_secret_stuff 
touch ~/super_secret_stuff/top_secret.txt
sudo updatedb
locate top_secret.txt > secret_place.txt
Ans
mkdir super_secret_stuff
touch super_secret_stuff/top_secret.txt
sudo updatedb
locate top_secret.txt > ~/secret_place.txt
Part 2
sudo find / -maxdepth 4 -type f -size -1M -exec ls -lh 
sudo find / -maxdepth 4 -type f -size -1M -exec ls -lh | sort -k 5hr > filesizes.txt
sudo find / -maxdepth 4 -type f -size +1M -exec ls -lh '{}' \; | sort -k 5hr > ~/filesizes.txt
Ans
sudo find -maxdepth 4 -type f -size +1M -exec ls -lh {} \; | sort -k 5hr > ~/filesizes.txt
11/10/2022
sudo find ~ -name "filesizes.txt" -exec chmod +x '{}' \;
Bashscript test.sh
#!/bin/bash
crontab -e
Ubuntu has updated a package to the repositories called ' openafs-client ' which now provides a command called “backup”.
https://crontab.guru/
tar -czf ~/Test1/backup.tar.gz ~/{Documnets,Pictures} 2>/dev/null
bash ~/test1/backup.sh(folder path of script)
Assingment
vi hungry.sh
#!/bin/bash
echo "I am hungry. Feed me data." >> ~/demands.txt
date >> ~/demands.log

* * * * * bash ~/hungry.sh
crontab -l
grep -ic cron /var/log/* | grep -v :0
grep cron /etc/rsyslog.conf
apt -cache search docx | grep 
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install dpkg-dev
sudo apt-get purge 
sudo apt-get clean
sudo apt-get autoremove


